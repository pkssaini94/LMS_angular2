{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/course.service.ts","webpack:///./src/app/courses/courses.component.css","webpack:///./src/app/courses/courses.component.html","webpack:///./src/app/courses/courses.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/student.service.ts","webpack:///./src/app/students/students.component.css","webpack:///./src/app/students/students.component.html","webpack:///./src/app/students/students.component.ts","webpack:///./src/app/subject.service.ts","webpack:///./src/app/subjects/subjects.component.css","webpack:///./src/app/subjects/subjects.component.html","webpack:///./src/app/subjects/subjects.component.ts","webpack:///./src/app/teacher.service.ts","webpack:///./src/app/teachers/teachers.component.css","webpack:///./src/app/teachers/teachers.component.html","webpack:///./src/app/teachers/teachers.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,yBAAyB,qBAAqB,qBAAqB,oBAAoB,2BAA2B,KAAK,gBAAgB,qBAAqB,qBAAqB,gCAAgC,oBAAoB,2BAA2B,KAAK,C;;;;;;;;;;;ACArQ,u8B;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,KAAK,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAW,GAAY,KAAK,CAAC;IA0C/B,CAAC;IAvCC,2BAAI,GAAJ;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAE3B,CAAC;IACD,6BAAM,GAAN;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAE3B,CAAC;IACD,8BAAO,GAAP;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAE3B,CAAC;IACD,8BAAO,GAAP;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAE3B,CAAC;IACD,8BAAO,GAAP;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IA/CU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAgDxB;IAAD,mBAAC;CAAA;AAhDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AAGT;AACgB;AACG;AACA;AACA;AACZ;AACN;AACG;AACA;AACA;AAkBnD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,8EAAiB;gBACjB,8EAAiB;gBACjB,8EAAiB;gBACjB,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,6DAAa,EAAE,gEAAc,EAAE,gEAAc,EAAE,gEAAc,CAAC;YAC1E,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AChCqB;AACoB;AAK/D;IAOE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANpC,aAAQ,GAAG,yCAAyC,CAAC;QACrD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,iCAAiC;aAClD,CAAC;SACH,CAAC;IACsC,CAAC;IAEzC,kCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,kCAAU,GAAV,UAAW,UAAkB;QAC3B,IAAI,KAAK,GAAG;YACV,MAAM,EAAE,UAAU;SACnB;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;IAC/D,CAAC;IAED,kCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC;IACnD,CAAC;IAED,iCAAS,GAAT,UAAU,IAAY,EAAE,EAAU;QAChC,IAAI,QAAQ,GAAG;YACb,MAAM,EAAE,IAAI;SACb;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,EAAE,GAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;IAChF,CAAC;IA7BU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAQ0B,+DAAU;OAPzB,aAAa,CA+BzB;IAAD,oBAAC;CAAA;AA/ByB;;;;;;;;;;;;ACN1B,mB;;;;;;;;;;;ACAA,+XAA+X,MAAM,yBAAyB,QAAQ,i9BAAi9B,MAAM,yBAAyB,eAAe,yBAAyB,QAAQ,ulBAAulB,QAAQ,+O;;;;;;;;;;;;;;;;;;;;;;;;;ACAn/D;AAGA;AAQlD;IAIE,0BAAoB,IAAmB;QAAnB,SAAI,GAAJ,IAAI,CAAe;IAAI,CAAC;IAE5C,mCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;aACnB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC;QAEJ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;aACnB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC;IACN,CAAC;IAED,oCAAS,GAAT,UAAU,IAAY;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;aACvB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IACN,CAAC;IAED,mCAAQ,GAAR,UAAS,IAAY,EAAE,EAAU;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAC,EAAE,CAAC;aAC3B,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IAEJ,CAAC;IAnCU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAK0B,6DAAa;OAJ5B,gBAAgB,CAoC5B;IAAD,uBAAC;CAAA;AApC4B;;;;;;;;;;;;ACX7B,mB;;;;;;;;;;;ACAA,oG;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACoB;AAK/D;IAQE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAPpC,aAAQ,GAAG,yCAAyC,CAAC;QAErD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,iCAAiC;aAClD,CAAC;SACH,CAAC;IACsC,CAAC;IAEzC,oCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,oCAAW,GAAX,UAAY,UAAU;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;IACpE,CAAC;IAhBU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAS0B,+DAAU;OARzB,cAAc,CAiB1B;IAAD,qBAAC;CAAA;AAjB0B;;;;;;;;;;;;ACN3B,mB;;;;;;;;;;;ACAA,oYAAoY,mCAAmC,MAAM,yBAAyB,mBAAmB,yBAAyB,QAAQ,imBAAimB,QAAQ,6OAA6O,QAAQ,+P;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtyC;AACE;AACF;AAQlD;IAKE,2BAAoB,IAAoB,EAAU,KAAoB;QAAlD,SAAI,GAAJ,IAAI,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAE3E,oCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;aACpB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;QAEJ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;aACpB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC;QAEJ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;aACpB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC;IACN,CAAC;IACD,sCAAU,GAAV,UAAW,IAAY,EAAE,GAAW,EAAE,GAAW;QAC/C,IAAI,UAAU,GAAG;YACf,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,GAAG;SACX;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;aAC9B,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACN,CAAC;IArCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAM0B,+DAAc,EAAiB,6DAAa;OAL3D,iBAAiB,CAuC7B;IAAD,wBAAC;CAAA;AAvC6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACVa;AACoB;AAK/D;IASE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,aAAQ,GAAG,yCAAyC,CAAC;QAErD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,iCAAiC;aAClD,CAAC;SACH,CAAC;IAEsC,CAAC;IAEzC,oCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,oCAAW,GAAX,UAAY,UAAU;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;IACpE,CAAC;IAjBU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAU0B,+DAAU;OATzB,cAAc,CAkB1B;IAAD,qBAAC;CAAA;AAlB0B;;;;;;;;;;;;ACN3B,mB;;;;;;;;;;;ACAA,4ZAA4Z,MAAM,yBAAyB,eAAe,yBAAyB,QAAQ,4lBAA4lB,QAAQ,+L;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7hC;AACE;AACF;AAQlD;IAIE,2BAAoB,KAAqB,EAAU,KAAoB;QAAnD,UAAK,GAAL,KAAK,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAE5E,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;aACrB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;QAEJ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;aACpB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC,CAAC;IACN,CAAC;IACD,sCAAU,GAAV,UAAW,IAAY,EAAE,GAAW;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,UAAU,GAAG;YACf,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,GAAG;SACX;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC;aAC/B,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACN,CAAC;IA9BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAK2B,+DAAc,EAAiB,6DAAa;OAJ5D,iBAAiB,CAgC7B;IAAD,wBAAC;CAAA;AAhC6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACVa;AACoB;AAK/D;IAUE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,aAAQ,GAAG,yCAAyC,CAAC;QAErD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,iCAAiC;aAClD,CAAC;SACH,CAAC;IAEsC,CAAC;IAEzC,oCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,qCAAY,GAAZ,UAAa,UAAU;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;IACpE,CAAC;IAlBU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAW0B,+DAAU;OAVzB,cAAc,CAoB1B;IAAD,qBAAC;CAAA;AApB0B;;;;;;;;;;;;ACN3B,mB;;;;;;;;;;;ACAA,6ZAA6Z,MAAM,yBAAyB,gBAAgB,yBAAyB,QAAQ,4lBAA4lB,QAAQ,uL;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/hC;AACE;AACA;AAOpD;IAIE,2BAAoB,KAAqB,EAAU,KAAqB;QAApD,UAAK,GAAL,KAAK,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE7E,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;aACrB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;QAEJ,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;aACrB,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;IAED,sCAAU,GAAV,UAAW,IAAY,EAAE,GAAW;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,UAAU,GAAG;YACf,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,GAAG;SACX;QACD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC;aAChC,SAAS,CAAC,UAAC,GAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACN,CAAC;IA/BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAK2B,+DAAc,EAAiB,+DAAc;OAJ7D,iBAAiB,CAgC7B;IAAD,wBAAC;CAAA;AAhC6B;;;;;;;;;;;;;;ACT9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"header{\\r\\n    padding: 1em;\\r\\n    color: black;\\r\\n    clear: left;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n    padding: 1em;\\r\\n    color: white;\\r\\n    background-color: black;\\r\\n    clear: left;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<header>\\n  <h1>School Management Dashboard</h1>\\n</header>\\n<div>\\n  <nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    <div style=\\\"color: white\\\">\\n      <a class=\\\"btn btn-dark\\\" (click)=\\\"home()\\\">Home</a>\\n      <a class=\\\"btn btn-dark\\\" (click)=\\\"course()\\\">Course</a>\\n      <a class=\\\"btn btn-dark\\\" (click)=\\\"student()\\\">Student</a>\\n      <a class=\\\"btn btn-dark\\\" (click)=\\\"subject()\\\">Subject</a>\\n      <a class=\\\"btn btn-dark\\\" (click)=\\\"teacher()\\\">Teacher</a>\\n    </div>\\n  </nav>\\n\\n  <div *ngIf=\\\"homepage\\\">\\n    <app-home></app-home>\\n  </div>\\n\\n  <div *ngIf=\\\"coursepage\\\">\\n    <app-courses></app-courses>\\n  </div>\\n\\n  <div *ngIf=\\\"studentpage\\\">\\n    <app-students></app-students>\\n  </div>\\n\\n  <div *ngIf=\\\"subjectpage\\\">\\n    <app-subjects></app-subjects>\\n  </div>\\n\\n  <div *ngIf=\\\"teacherpage\\\">\\n    <app-teachers></app-teachers>\\n  </div>\\n\\n</div>\\n<footer>\\n  <h6>Copyright @Pawan</h6>\\n</footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SMD';\n  homepage: boolean = false;\n  coursepage: boolean = false;\n  studentpage: boolean = false;\n  subjectpage: boolean = false;\n  teacherpage: boolean = false;\n\n\n  home() {\n    this.homepage = true;\n    this.coursepage = false;\n    this.studentpage = false;\n    this.subjectpage = false;\n    this.teacherpage = false;\n\n  }\n  course() {\n    this.homepage = false;\n    this.coursepage = true;\n    this.studentpage = false;\n    this.subjectpage = false;\n    this.teacherpage = false;\n\n  }\n  student() {\n    this.homepage = false;\n    this.coursepage = false;\n    this.studentpage = true;\n    this.subjectpage = false;\n    this.teacherpage = false;\n\n  }\n  subject() {\n    this.homepage = false;\n    this.coursepage = false;\n    this.studentpage = false;\n    this.subjectpage = true;\n    this.teacherpage = false;\n\n  }\n  teacher() {\n    this.homepage = false;\n    this.coursepage = false;\n    this.studentpage = false;\n    this.subjectpage = false;\n    this.teacherpage = true;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { CoursesComponent } from './courses/courses.component';\nimport { StudentsComponent } from './students/students.component';\nimport { SubjectsComponent } from './subjects/subjects.component';\nimport { TeachersComponent } from './teachers/teachers.component';\nimport { HomeComponent } from './home/home.component';\nimport { CourseService } from './course.service'\nimport { StudentService } from './student.service';\nimport { SubjectService } from './subject.service';\nimport { TeacherService } from './teacher.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CoursesComponent,\n    StudentsComponent,\n    SubjectsComponent,\n    TeachersComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [CourseService, StudentService, SubjectService, TeacherService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  BASE_URL = 'https://pawanlms.herokuapp.com/courses/';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n    })\n  };\n  constructor(private http: HttpClient) { }\n\n  getCourses() {\n    return this.http.get(this.BASE_URL);\n  }\n\n  postCourse(coursename: string) {\n    let cname = {\n      'name': coursename\n    }\n    return this.http.post(this.BASE_URL, cname, this.httpOptions)\n  }\n\n  getBatches() {\n    return this.http.get(this.BASE_URL + \"allBatch\");\n  }\n\n  postBatch(name: string, id: number) {\n    let newBatch = {\n      'name': name\n    }\n    return this.http.post(this.BASE_URL+id+'/batches', newBatch, this.httpOptions)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Course List\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <th>S.no</th>\\n          <th>Courses</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let c of courseList\\\">\\n            <td>{{c.id}}</td>\\n            <td>{{c.name}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header\\\">\\n      Add Course\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Course Name</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" required #name>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addCourse(name.value)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Batch List\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <th>S.no</th>\\n          <th>Course</th>\\n          <th>Batch</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let b of batchList\\\">\\n            <td>{{b.id}}</td>\\n            <td>{{b.course.name}}</td>\\n            <td>{{b.name}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header\\\">\\n      ADD Batch\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Batch Name</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" required #inp>\\n      </div>\\n      <div>\\n        <select class=\\\"custom-select\\\" #courseId>\\n          <option selected>Select Course</option>\\n          <option *ngFor=\\\"let c of courseList\\\" [value]=\\\"c.id\\\">{{c.name}}</option>\\n        </select>\\n      </div>\\n      <br>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addBatch(inp.value,courseId.value)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { CourseService } from '../course.service';\n\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n  courseList;\n  batchList;\n\n  constructor(private data: CourseService) { }\n\n  ngOnInit() {\n    this.data.getCourses()\n      .subscribe((res) => {\n        console.log(\"hello\")\n        console.log(res);\n        this.courseList = res;\n      })\n\n    this.data.getBatches()\n      .subscribe((res) => {\n        console.log(res);\n        this.batchList = res;\n      })\n  }\n\n  addCourse(name: string) {\n    console.log(name)\n    this.data.postCourse(name)\n      .subscribe((res) => {\n        console.log(res)\n      })\n  }\n\n  addBatch(name: string, id: number) {\n    this.data.postBatch(name,id)\n    .subscribe((res)=>{\n      console.log(res);\n    })\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div align=\\\"center\\\">\\n  <h3>Welcome To School Management Dashboard</h3>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  BASE_URL = 'https://pawanlms.herokuapp.com/students';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n    })\n  };\n  constructor(private http: HttpClient) { }\n\n  getStudents() {\n    return this.http.get(this.BASE_URL);\n  }\n\n  postStudent(newStudent) {\n    return this.http.post(this.BASE_URL, newStudent, this.httpOptions)\n  }\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Student List\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <th>S.no</th>\\n          <th>Course</th>\\n          <th>Batch</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let b of studentlist; let x=index\\\">\\n            <td>{{b.id}}</td>\\n            <td>{{b.batches[0].name}}</td>\\n            <td>{{b.name}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header\\\">\\n      ADD Student\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Student Name</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" required #inp>\\n      </div>\\n      <div>\\n        <select class=\\\"custom-select\\\" #courseId>\\n          <option selected>Select Course</option>\\n          <option *ngFor=\\\"let c of courseList\\\" [value]=\\\"c.id\\\">{{c.name}}</option>\\n        </select>\\n      </div>\\n      <br>\\n      <div>\\n        <select class=\\\"custom-select\\\" #batchId>\\n          <option selected>Select Batch</option>\\n          <option *ngFor=\\\"let c of batchList\\\" [value]=\\\"c.id\\\">{{c.name}}</option>\\n        </select>\\n      </div>\\n      <br>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addStudent(inp.value,courseId.value,batchId.value)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service';\nimport { CourseService } from '../course.service';\n\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n  studentlist;\n  batchList;\n  courseList;\n\n  constructor(private data: StudentService, private cdata: CourseService) { }\n\n  ngOnInit() {\n    this.data.getStudents()\n      .subscribe((res) => {\n        console.log(res)\n        this.studentlist = res;\n      })\n\n    this.cdata.getBatches()\n      .subscribe((res) => {\n        console.log(res);\n        this.batchList = res;\n      })\n\n    this.cdata.getCourses()\n      .subscribe((res) => {\n        console.log(\"hello\")\n        console.log(res);\n        this.courseList = res;\n      })\n  }\n  addStudent(name: string, cid: number, bid: number) {\n    let newStudent = {\n      'name': name,\n      'cid': cid,\n      'bid': bid\n    }\n    this.data.postStudent(newStudent)\n      .subscribe((res) => {\n        console.log(res);\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  BASE_URL = 'https://pawanlms.herokuapp.com/subjects';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getSubjects() {\n    return this.http.get(this.BASE_URL);\n  }\n\n  postSubject(newSubject) {\n    return this.http.post(this.BASE_URL, newSubject, this.httpOptions)\n  }\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Subject List\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <th>S.no</th>\\n          <th>Course</th>\\n          <th>Subject</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let s of subjectlist\\\">\\n            <td>{{s.id}}</td>\\n            <td>{{s.course.name}}</td>\\n            <td>{{s.name}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header\\\">\\n      ADD Subjects\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Subject Name</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" required #inp>\\n      </div>\\n      <div>\\n        <select class=\\\"custom-select\\\" #courseId>\\n          <option selected>Select Course</option>\\n          <option *ngFor=\\\"let c of courselist\\\" [value]=\\\"c.id\\\">{{c.name}}</option>\\n        </select>\\n      </div>\\n      <br>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"addSubject(inp.value,courseId.value)\\\">Submit</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from '../subject.service';\nimport { CourseService } from '../course.service';\n\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styleUrls: ['./subjects.component.css']\n})\nexport class SubjectsComponent implements OnInit {\n  subjectlist;\n  courselist;\n\n  constructor(private sdata: SubjectService, private cdata: CourseService) { }\n\n  ngOnInit() {\n    this.sdata.getSubjects()\n      .subscribe((res) => {\n        console.log(res);\n        this.subjectlist = res;\n      })\n\n    this.cdata.getCourses()\n      .subscribe((res) => {\n        console.log(res);\n        this.courselist = res;\n      })\n  }\n  addSubject(name: string, cid: number) {\n    console.log(name);\n    console.log(cid);\n    let newSubject = {\n      'name': name,\n      'cid': cid\n    }\n    this.sdata.postSubject(newSubject)\n      .subscribe((res) => {\n        console.log(res);\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  BASE_URL = 'https://pawanlms.herokuapp.com/teachers';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getTeachers() {\n    return this.http.get(this.BASE_URL);\n  }\n\n  postTeachers(newTeacher) {\n    return this.http.post(this.BASE_URL, newTeacher, this.httpOptions)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Teacher List\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <th>S.no</th>\\n          <th>Subject</th>\\n          <th>Teacher</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let s of teacherlist\\\">\\n            <td>{{s.id}}</td>\\n            <td>{{s.subject.name}}</td>\\n            <td>{{s.name}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header\\\">\\n      ADD Teacher\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Teacher Name</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" required #inp>\\n      </div>\\n      <div>\\n        <select class=\\\"custom-select\\\" #courseId>\\n          <option selected>Select Course</option>\\n          <option *ngFor=\\\"let s of subjectlist\\\" [value]=\\\"s.id\\\">{{s.name}}</option>\\n        </select>\\n      </div>\\n      <br>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"addTeacher(inp.value,courseId.value)\\\">Submit</button>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from '../subject.service';\nimport { TeacherService } from '../teacher.service';\n\n@Component({\n  selector: 'app-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.css']\n})\nexport class TeachersComponent implements OnInit {\n  subjectlist;\n  teacherlist;\n\n  constructor(private sdata: SubjectService, private tdata: TeacherService) { }\n\n  ngOnInit() {\n    this.sdata.getSubjects()\n      .subscribe((res) => {\n        console.log(res);\n        this.subjectlist = res;\n      })\n\n    this.tdata.getTeachers()\n      .subscribe((res) => {\n        console.log(res);\n        this.teacherlist = res;\n      })\n  }\n\n  addTeacher(name: string, sid: number) {\n    console.log(name);\n    console.log(sid);\n    let newSubject = {\n      'name': name,\n      'sid': sid\n    }\n    this.tdata.postTeachers(newSubject)\n      .subscribe((res) => {\n        console.log(res);\n      })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}